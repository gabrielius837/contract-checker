import { OpCode } from "./types"

const getOpCode = (hex: string): OpCode | null => {
    switch (hex) {
        case '00':
            return 'STOP'
        case '01':
            return 'ADD'
        case '02':
            return 'MUL'
        case '03':
            return 'SUB'
        case '04':
            return 'DIV'
        case '05':
            return 'SDIV'
        case '06':
            return 'MOD'
        case '07':
            return 'SMOD'
        case '08':
            return 'ADDMOD'
        case '09':
            return 'MULMOD'
        case '0a':
        case '0A':
            return 'EXP'
        case '0b':
        case '0B':
            return 'SIGNEXTEND'
        case '10':
            return 'LT'
        case '11':
            return 'GT'
        case '12':
            return 'SLT'
        case '13':
            return 'SGT'
        case '14':
            return 'EQ'
        case '15':
            return 'ISZERO'
        case '16':
            return 'AND'
        case '17':
            return 'OR'
        case '18':
            return 'XOR'
        case '19':
            return 'NOT'
        case '1a':
        case '1A':
            return 'BYTE'
        case '1b':
        case '1B':
            return 'SHL'
        case '1c':
        case '1C':
            return 'SHR'
        case '1d':
        case '1D':
            return 'SAR'
        case '20':
            return 'KECCAK256'
        case '30':
            return 'ADDRESS'
        case '31':
            return 'BALANCE'
        case '32':
            return 'ORIGIN'
        case '33':
            return 'CALLER'
        case '34':
            return 'CALLVALUE'
        case '35':
            return 'CALLDATALOAD'
        case '36':
            return 'CALLDATASIZE'
        case '37':
            return 'CALLDATACOPY'
        case '38':
            return 'CODESIZE'
        case '39':
            return 'CODECOPY'
        case '3a':
        case '3A':
            return 'GASPRICE'
        case '3b':
        case '3B':
            return 'EXTCODESIZE'
        case '3c':
        case '3C':
            return 'EXTCODECOPY'
        case '3d':
        case '3D':
            return 'RETURNDATASIZE'
        case '3e':
        case '3E':
            return 'RETURNDATACOPY'
        case '3f':
        case '3F':
            return 'EXTCODEHASH'
        case '40':
            return 'BLOCKHASH'
        case '41':
            return 'COINBASE'
        case '42':
            return 'TIMESTAMP'
        case '43':
            return 'NUMBER'
        case '44':
            return 'PREVRANDAO'
        case '45':
            return 'GASLIMIT'
        case '46':
            return 'CHAINID'
        case '47':
            return 'SELFBALANCE'
        case '48':
            return 'BASEFEE'
        case '50':
            return 'POP'
        case '51':
            return 'MLOAD'
        case '52':
            return 'MSTORE'
        case '53':
            return 'MSTORE8'
        case '54':
            return 'SLOAD'
        case '55':
            return 'SSTORE'
        case '56':
            return 'JUMP'
        case '57':
            return 'JUMPI'
        case '58':
            return 'PC'
        case '59':
            return 'MSIZE'
        case '5a':
        case '5A':
            return 'GAS'
        case '5b':
        case '5B':
            return 'JUMPDEST'
        case '60':
            return 'PUSH1'
        case '61':
            return 'PUSH2'
        case '62':
            return 'PUSH3'
        case '63':
            return 'PUSH4'
        case '64':
            return 'PUSH5'
        case '65':
            return 'PUSH6'
        case '66':
            return 'PUSH7'
        case '67':
            return 'PUSH8'
        case '68':
            return 'PUSH9'
        case '69':
            return 'PUSH10'
        case '6a':
        case '6A':
            return 'PUSH11'
        case '6b':
        case '6B':
            return 'PUSH12'
        case '6c':
        case '6C':
            return 'PUSH13'
        case '6d':
        case '6D':
            return 'PUSH14'
        case '6e':
        case '6E':
            return 'PUSH15'
        case '6f':
        case '6F':
            return 'PUSH16'
        case '70':
            return 'PUSH17'
        case '71':
            return 'PUSH18'
        case '72':
            return 'PUSH19'
        case '73':
            return 'PUSH20'
        case '74':
            return 'PUSH21'
        case '75':
            return 'PUSH22'
        case '76':
            return 'PUSH23'
        case '77':
            return 'PUSH24'
        case '78':
            return 'PUSH25'
        case '79':
            return 'PUSH26'
        case '7a':
        case '7A':
            return 'PUSH27'
        case '7b':
        case '7B':
            return 'PUSH28'
        case '7c':
        case '7C':
            return 'PUSH29'
        case '7d':
        case '7D':
            return 'PUSH30'
        case '7e':
        case '7E':
            return 'PUSH31'
        case '7f':
        case '7F':
            return 'PUSH32'
        case '80':
            return 'DUP1'
        case '81':
            return 'DUP2'
        case '82':
            return 'DUP3'
        case '83':
            return 'DUP4'
        case '84':
            return 'DUP5'
        case '85':
            return 'DUP6'
        case '86':
            return 'DUP7'
        case '87':
            return 'DUP8'
        case '88':
            return 'DUP9'
        case '89':
            return 'DUP10'
        case '8a':
        case '8A':
            return 'DUP11'
        case '8b':
        case '8B':
            return 'DUP12'
        case '8c':
        case '8C':
            return 'DUP13'
        case '8d':
        case '8D':
            return 'DUP14'
        case '8e':
        case '8E':
            return 'DUP15'
        case '8f':
        case '8F':
            return 'DUP16'
        case '90':
            return 'SWAP1'
        case '91':
            return 'SWAP2'
        case '92':
            return 'SWAP3'
        case '93':
            return 'SWAP4'
        case '94':
            return 'SWAP5'
        case '95':
            return 'SWAP6'
        case '96':
            return 'SWAP7'
        case '97':
            return 'SWAP8'
        case '98':
            return 'SWAP9'
        case '99':
            return 'SWAP10'
        case '9a':
        case '9A':
            return 'SWAP11'
        case '9b':
        case '9B':
            return 'SWAP12'
        case '9c':
        case '9C':
            return 'SWAP13'
        case '9d':
        case '9D':
            return 'SWAP14'
        case '9e':
        case '9E':
            return 'SWAP15'
        case '9f':
        case '9F':
            return 'SWAP16'
        case 'a0':
        case 'A0':
            return 'LOG0'
        case 'a1':
        case 'A1':
            return 'LOG1'
        case 'a2':
        case 'A2':
            return 'LOG2'
        case 'a3':
        case 'A3':
            return 'LOG3'
        case 'a4':
        case 'A4':
            return 'LOG4'
        case 'f0':
        case 'F0':
            return 'CREATE'
        case 'f1':
        case 'F1':
            return 'CALL'
        case 'f2':
        case 'F2':
            return 'CALLCODE'
        case 'f3':
        case 'F3':
            return 'RETURN'
        case 'f4':
        case 'F4':
            return 'DELEGATECALL'
        case 'f5':
        case 'F5':
            return 'CREATE2'
        case 'fa':
        case 'fA':
        case 'Fa':
        case 'FA':
            return 'STATICCALL'
        case 'fd':
        case 'fD':
        case 'Fd':
        case 'FD':
            return 'REVERT'
        case 'fe':
        case 'fE':
        case 'Fe':
        case 'FE':
            return 'INVALID'
        case 'ff':
        case 'fF':
        case 'Ff':
        case 'FF':
            return 'SELFDESTRUCT'
        default:
            console.error(`fragment ${hex} does not correspond to an op code`)
            return null
    }
}

export default getOpCode